{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ipbjs\\\\Desktop\\\\pythonapps\\\\twofortwenty\\\\frontend\\\\src\\\\components\\\\homePage\\\\Stock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stock() {\n  _s();\n\n  const [state, setState] = useState({\n    stockChartXValue: [],\n    stockChartYValue: []\n  });\n\n  function fetchStock() {\n    const API_KEY = \"ZLPQ29WJVETRN2AF\";\n    let stockSymbol = 'AMZN';\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${stockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      for (var key in data['Time Series (Daily)']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n      }\n\n      setState({\n        stockChartXValue: stockChartXValuesFunction,\n        stockChartYValue: stockChartYValuesFunction\n      });\n    });\n  }\n\n  useEffect(() => {\n    fetchStock();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        x: state.stockChartXValue,\n        y: state.stockChartYValue,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {\n          color: 'green'\n        }\n      }],\n      layout: {\n        width: 720,\n        height: 440,\n        paper_bgcolor: \"#000\",\n        plot_bgcolor: \"#000\",\n        title: \"Amazon\",\n        font: {\n          color: \"#FFFFF7\"\n        },\n        hoverlabel: {\n          bgcolor: \"#FFFFF7\"\n        },\n        showlegend: false\n      },\n      config: {\n        displaylogo: false,\n        displayModeBar: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stock, \"pVjud8NF6FmSNK59w/e38geyxyQ=\");\n\n_c = Stock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"sources":["C:/Users/ipbjs/Desktop/pythonapps/twofortwenty/frontend/src/components/homePage/Stock.jsx"],"names":["React","useState","useEffect","Plot","Stock","state","setState","stockChartXValue","stockChartYValue","fetchStock","API_KEY","stockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","console","log","key","push","x","y","type","mode","marker","color","width","height","paper_bgcolor","plot_bgcolor","title","font","hoverlabel","bgcolor","showlegend","displaylogo","displayModeBar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAE7B,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBL,QAAQ,CAC5B;AAACM,IAAAA,gBAAgB,EAAC,EAAlB;AACAC,IAAAA,gBAAgB,EAAC;AADjB,GAD4B,CAA9B;;AAKE,WAASC,UAAT,GAAqB;AACnB,UAAMC,OAAO,GAAC,kBAAd;AACA,QAAIC,WAAW,GAAC,MAAhB;AACA,QAAIC,QAAQ,GAAE,uEAAsED,WAAY,8BAA6BD,OAAQ,EAArI;AACA,QAAIG,yBAAyB,GAAC,EAA9B;AACA,QAAIC,yBAAyB,GAAC,EAA9B;AACAC,IAAAA,KAAK,CAACH,QAAD,CAAL,CACGI,IADH,CACQ,UAASC,QAAT,EAAkB;AACtB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQ,UAASG,IAAT,EAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,WAAI,IAAIG,GAAR,IAAeH,IAAI,CAAC,qBAAD,CAAnB,EAA2C;AACzCN,QAAAA,yBAAyB,CAACU,IAA1B,CAA+BD,GAA/B;AAGAR,QAAAA,yBAAyB,CAACS,IAA1B,CAA+BJ,IAAI,CAAC,qBAAD,CAAJ,CAA4BG,GAA5B,EAAiC,SAAjC,CAA/B;AACD;;AAEDhB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,gBAAgB,EAACM,yBADV;AAEPL,QAAAA,gBAAgB,EAACM;AAFV,OAAD,CAAR;AAKD,KAlBH;AAqBD;;AACDZ,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,UAAU;AAAI,GADP,EACQ,EADR,CAAT;AAKE,sBACE;AAAA,2BAII,QAAC,IAAD;AACI,MAAA,IAAI,EAAE,CACJ;AACEe,QAAAA,CAAC,EAAEnB,KAAK,CAACE,gBADX;AAEEkB,QAAAA,CAAC,EAAEpB,KAAK,CAACG,gBAFX;AAGEkB,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE,eAJR;AAKEC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AALV,OADI,CADV;AAWI,MAAA,MAAM,EACJ;AAACC,QAAAA,KAAK,EAAE,GAAR;AACAC,QAAAA,MAAM,EAAE,GADR;AAEAC,QAAAA,aAAa,EAAC,MAFd;AAGAC,QAAAA,YAAY,EAAC,MAHb;AAIAC,QAAAA,KAAK,EAAE,QAJP;AAKAC,QAAAA,IAAI,EAAC;AAACN,UAAAA,KAAK,EAAC;AAAP,SALL;AAMAO,QAAAA,UAAU,EAAC;AAACC,UAAAA,OAAO,EAAC;AAAT,SANX;AAOAC,QAAAA,UAAU,EAAC;AAPX,OAZN;AAyBO,MAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAC,KADN;AAGNC,QAAAA,cAAc,EAAE;AAHV;AAzBf;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmDL;;GA3FuBpC,K;;KAAAA,K","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nexport default function Stock(){\r\n\r\n  const[state,setState]=useState(\r\n    {stockChartXValue:[],\r\n    stockChartYValue:[]\r\n  })\r\n\r\n    function fetchStock(){\r\n      const API_KEY=\"ZLPQ29WJVETRN2AF\";\r\n      let stockSymbol='AMZN';\r\n      let API_Call=`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${stockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n      let stockChartXValuesFunction=[];\r\n      let stockChartYValuesFunction=[];\r\n      fetch(API_Call)\r\n        .then(function(response){\r\n          return response.json();\r\n        })\r\n        .then(function(data){\r\n          console.log(data);\r\n          for(var key in data['Time Series (Daily)']){\r\n            stockChartXValuesFunction.push(key);\r\n\r\n            \r\n            stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\r\n          }\r\n\r\n          setState({\r\n            stockChartXValue:stockChartXValuesFunction,\r\n            stockChartYValue:stockChartYValuesFunction\r\n\r\n          })\r\n        })\r\n\r\n\r\n    }\r\n    useEffect(()=>{\r\n      fetchStock();},[] )\r\n\r\n\r\n\r\n      return(\r\n        <div>\r\n        \r\n          \r\n   \r\n            <Plot\r\n                data={[\r\n                  {\r\n                    x: state.stockChartXValue,\r\n                    y: state.stockChartYValue,\r\n                    type: 'scatter',\r\n                    mode: 'lines+markers',\r\n                    marker: {color: 'green'},\r\n                  },\r\n                  \r\n                ]}\r\n                layout={ \r\n                  {width: 720, \r\n                  height: 440,\r\n                  paper_bgcolor:\"#000\",\r\n                  plot_bgcolor:\"#000\",\r\n                  title: \"Amazon\",\r\n                  font:{color:\"#FFFFF7\"},\r\n                  hoverlabel:{bgcolor:\"#FFFFF7\"},\r\n                  showlegend:false,\r\n                  \r\n                  \r\n                  \r\n                  \r\n                   }}\r\n                   config={{\r\n                     displaylogo:false,\r\n                     \r\n                     displayModeBar: false\r\n                   }}\r\n  \r\n                \r\n                \r\n                \r\n              />\r\n            \r\n            </div>\r\n      )\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}